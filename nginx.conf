worker_processes  1;
user root;  
events {
    worker_connections  1024;
}
http {
    include       mime.types;
    default_type  application/octet-stream;
    lua_need_request_body on;
    gzip  on;
    resolver 127.0.0.11 ipv6=off;          
    real_ip_header     X-Forwarded-For;
    real_ip_recursive on;
    upstream  geoips {
       server app:8080 weight=20 max_fails=2 fail_timeout=30s;
    }
    server {
        listen       80;
        charset utf-8;
        default_type text/html;
        location / {
             default_type text/plain; 
             index index.html;
        }
        location /cityjson{
            default_type application/javascript; 
            content_by_lua_block {
               local headers=ngx.req.get_headers()
               local json = require("cjson.safe")
               local ip=headers["X-REAL-IP"] or headers["X_FORWARDED_FOR"] or ngx.var.remote_addr or "0.0.0.0"
               local res = ngx.location.capture('/geoip?ip='..ip)
               local info =[[var returnCitySN = {"cip":"]]..""..[[", "cid": "110000"]] ..[[, "cname":"]]..""..[["}; ]]
               if res.status==200 and res.body ~= nil  then
                 local ipadd = json.decode(res.body)
                 if ipadd ~= nil then
                    local cipinfo = {
                        cip = ipadd["result"][1].ip,
                        cname = ipadd["result"][1].city
                    }
                    info =[[var returnCitySN = {"cip":"]]..cipinfo.cip..[[", "cid": "110000"]] ..[[, "cname":"]]..cipinfo.cname..[["}; ]]
                 end
               end
               ngx.say(info)
            }
        }
        location /geoip {
            proxy_pass http://geoips;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }
}